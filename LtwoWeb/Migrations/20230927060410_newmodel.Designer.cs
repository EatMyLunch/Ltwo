// <auto-generated />
using LtwoWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LtwoWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230927060410_newmodel")]
    partial class newmodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Analysis", b =>
                {
                    b.Property<int>("AnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnalysisId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingTitleId")
                        .HasColumnType("int");

                    b.HasKey("AnalysisId");

                    b.HasIndex("TrainingTitleId");

                    b.ToTable("Analyses");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("TrainingTypeId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LtwoWeb.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Syllabus", b =>
                {
                    b.Property<int>("SyllabusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SyllabusId"));

                    b.Property<int>("AnalysisId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SyllabusId");

                    b.HasIndex("AnalysisId");

                    b.ToTable("Syllabuses");
                });

            modelBuilder.Entity("TrainingTitle", b =>
                {
                    b.Property<int>("TrainingTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingTitleId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingTitleId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TrainingTitles");
                });

            modelBuilder.Entity("TrainingType", b =>
                {
                    b.Property<int>("TrainingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingTypeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingTypeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("TrainingTypes");
                });

            modelBuilder.Entity("Analysis", b =>
                {
                    b.HasOne("TrainingTitle", "TrainingTitle")
                        .WithMany("Analyses")
                        .HasForeignKey("TrainingTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingTitle");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.HasOne("TrainingType", "TrainingType")
                        .WithMany("Categories")
                        .HasForeignKey("TrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingType");
                });

            modelBuilder.Entity("Syllabus", b =>
                {
                    b.HasOne("Analysis", "Analysis")
                        .WithMany("Syllabuses")
                        .HasForeignKey("AnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Analysis");
                });

            modelBuilder.Entity("TrainingTitle", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("TrainingTitles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TrainingType", b =>
                {
                    b.HasOne("LtwoWeb.Models.Department", "Department")
                        .WithMany("TrainingTypes")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Analysis", b =>
                {
                    b.Navigation("Syllabuses");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("TrainingTitles");
                });

            modelBuilder.Entity("LtwoWeb.Models.Department", b =>
                {
                    b.Navigation("TrainingTypes");
                });

            modelBuilder.Entity("TrainingTitle", b =>
                {
                    b.Navigation("Analyses");
                });

            modelBuilder.Entity("TrainingType", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
